/*
 * File: app/controller/UsersKgmController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('iagKgmMob.controller.UsersKgmController', {
    extend: 'Ext.app.Controller',
    alias: 'controller.userskgmcontroller',

    config: {
        refs: {
            searchByNameBtn: '#searchByNameBtn',
            txtByName: '#txtByName',
            navigationviewbyname: 'navigationviewbyname',
            userskgmdetailsview: 'userskgmdetailsview',
            userskgmdetailscard: 'userskgmdetailscard'
        },

        control: {
            "searchByNameBtn": {
                tap: 'onSearchByNameBtnTap'
            },
            "userskgmdetailsview": {
                itemtap: 'onListItemTap'
            }
        }
    },

    onSearchByNameBtnTap: function(button, e, eOpts) {
        		Ext.Viewport.setMasked({ xtype: 'loadmask', message: 'Зареждам ...', indicator:true});

        		var ime = Ext.getCmp('txtByName').getValue();

        		if (ime.length > 2)
        		{
        			var arr = ime.split(" ");

        			var Ime   = arr[0];
        			var Fam   = arr[1];

        			var store = Ext.getStore('UsersKgmStore');
        			store.load(
        			{
        				params: {
        					Ime: Ime,
        					Fam: Fam
        				},

        				callback: function(records, operation, success) {

        					if(success)
        					{
        						Ext.Viewport.setMasked(false);
                                this.getNavigationviewbyname().push({xtype:'userskgmdetailsview'});
        					//	console.log('success');
        					}
        					else
        					{
        						Ext.Viewport.setMasked(false);
        						Ext.Msg.alert('Събщение', 'Няма регистрирана такова лице.', Ext.emptyFn);
        					//	console.log('unsuccess');
                            }
        				},
        				scope: this
        			});
        		}
        		else
        		{
        			Ext.Msg.alert('Събщение', 'Некоректно търсене. Въведете минимум 3 букви, за да търсите по Име или 2 букви с интервал между тях за търсене по Име и Фамилия ', Ext.emptyFn);
        			Ext.Viewport.setMasked(false);
        		}

    },

    onListItemTap: function(dataview, index, target, record, e, eOpts) {
        console.log('tap item ...');
        Ext.Viewport.setMasked({ xtype: 'loadmask', message: 'Зареждам ...', indicator:true});
        var fulname = record.get('Ime')+' '+record.get('Prezime')+' '+record.get('Familia');

        		var store = Ext.getStore('UsersKgmStore1');
        		store.load(
        		{
        			params: {
        				namesId: record.get('NamesID')
        			},

        			callback: function(records, operation, success) {

        				if(success)
        				{
        					Ext.Viewport.setMasked(false);
        					this.getNavigationviewbyname().push({
                                                xtype: 'userskgmdetailscard',
                                                title: 'Данни за КГМ'
                                              });

        					console.log('success');
        				}
        				else
        				{
        					Ext.Viewport.setMasked(false);
        					Ext.Msg.alert('Събщение', 'Няма регистрирана такова лице.', Ext.emptyFn);
        					console.log('unsuccess');
                        }
        			},
        			scope: this
        		});
    }

});